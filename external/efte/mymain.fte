object GLOBAL {

    ScreenSizeX         = 130;
    ScreenSizeY         = 45;
    SelectPathname      = 0;       # select pathname when asking for file
    SysClipboard        = 1;       # use PM clipboard, or X11 selection for clipboard
    OpenAfterClose      = 1;       # prompt to load new file after closing last
    ShowMenuBar         = 1;       # show main menu bar
    ShowToolBar         = 1;       # builtin tool bar (OS/2 PM version only)
                                   # 0=none, 1=top 1=bottom of window
    ShowVScroll         = 1;       # show vertical scroll bar (text)
    ShowHScroll         = 0;       # show horizontal scroll bar (text)
    WeirdScroll         = 0;
    PMDisableAccel      = 0;       # disable Alt+Fx PM accelerators
    DefaultModeName     = 'PLAIN';
    KeepHistory         = 1;       # load/save history on entry/exit
    LoadDesktopOnEntry  = 0;       # load desktop on fte start (2 = when no files)
    SaveDesktopOnExit   = 0;       # save desktop in ExitEditor

    CompletionFilter    = /^{\c.+\.o|a|{bak}|{exe}|{lib}|{class}|{jar}|{zip}|{gz}|{tar.gz}|{tgz}}|{.+~}|{CVS}$/;

    PrintDevice         = "|lpr";
    CompileCommand      = 'make ';
    KeepMessages        = 1;
    HelpCommand         = "man";
    ScrollBorderX       = 0;
    ScrollBorderY       = 0;
    ScrollJumpX         = 8;
    ScrollJumpY         = 1;

    C_Indent            = 0;
    C_Continuation      = 0;
    C_BraceOfs          = 0;
    C_CaseOfs           = 0;
    C_CaseDelta         = 0;
    C_ClassOfs          = 0;
    C_ClassDelta        = 0;
    C_ColonOfs          = 0;
    C_CommentOfs        = 0;
    C_CommentDelta      = 0;
    C_FirstLevelWidth   = 0;
    C_FirstLevelIndent  = 0;
    C_ParenDelta        = 0;
    REXX_Indent         = 0;

    WindowFont      = "-*-*-*-r-normal--20-200-75-75-c-100-*";

    # grep -n
    CompileRx = { 1, 2, 3, /^([\w:._\-\/\\]#):(\d+):/ };
    # GCC
    CompileRx = { 1, 2, 3, /^([\w:._\-\/\\]+):(\d+):\s(.*)$/ };
    # Visual C++ 6.0
    CompileRx = { 1, 2, 3, /^([\w:._\-\/\\]+)\((\d+)\) :\s(.*)$/ };
    # SVN
    CompileRx = { 1, 2, 3, /^{U|A|C|G} +(.+)$/ };
}

color_palette {

    { 'black',                        '0 0' },
    { 'darkBlue',                     '1 1' },
    { 'darkGreen',                    '2 2' },
    { 'darkCyan',                     '3 3' },
    { 'darkRed',                      '4 4' },
    { 'darkMagenta',                  '5 5' },
    { 'brown',                        '6 6' },
    { 'gray',                         '7 7' },
    { 'darkGray',                     '8 8' },
    { 'blue',                         '9 9' },
    { 'green',                        'A A' },
    { 'cyan',                         'B B' },
    { 'red',                          'C C' },
    { 'magenta',                      'D D' },
    { 'yellow',                       'E E' },
    { 'white',                        'F F' },

    { 'ScrollBar_Arrows',             'black:gray' },
    { 'ScrollBar_Background',         'gray:black' },
    { 'ScrollBar_Slider',             'black:gray' },

    { 'Status_Normal',                'black:darkCyan' },
    { 'Status_Active',                'black:gray' },

    { 'Message_Normal',               'cyan:darkBlue' },
    { 'Message_Error',                'white:darkBlue' },
    { 'Message_Bold',                 'white:darkRed' },

    { 'EntryField_Field',             'cyan:darkBlue' },
    { 'EntryField_Prompt',            'white:darkBlue' },
    { 'EntryField_Selection',         'black:darkGreen' },

    { 'List_Status',                  'black:gray' },
    { 'List_Normal',                  'white:black' },
    { 'List_Selected',                'cyan:darkBlue' },

    { 'ASCII_Chars',                  'gray:black' },

    { 'Menu_Background',              'black:gray' },
    { 'Menu_ActiveItem',              'white:darkBlue' },
    { 'Menu_ActiveChar',              'red:darkBlue' },
    { 'Menu_NormalItem',              'black:gray' },
    { 'Menu_NormalChar',              'red:gray' },

    { "Choice_Title",                 'white:darkBlue' },
    { "Choice_Param",                 'cyan:darkBlue' },
    { "Choice_Background",            'gray:darkBlue' },
    { "Choice_ActiveItem",            'black:darkGreen' },
    { "Choice_ActiveChar",            'white:darkGreen' },
    { "Choice_NormalItem",            'white:darkBlue' },
    { "Choice_NormalChar",            'yellow:darkBlue' },

    { "bg",                           'white:black' }, # background
    { "fg",                           'white:black' }, # foreground

    { 'Editor_Selected',              'black:darkCyan' },
    { 'Editor_Markers',               'darkCyan:bg' },
    { 'Editor_FoundText',             'white:darkRed' },
    { 'Editor_Folds',                 'green:bg' },
    { 'Editor_HilitWord',             'red:bg' },

    { 'Editor_Default',               'fg:bg' },
    { 'Editor_Bold',                  'cyan:bg' },
    { 'Editor_Keywords',              'cyan:bg' },
    { 'Editor_Keywords2',             'cyan:bg' },
    { 'Editor_Keywords3',             'green:bg' },
    { 'Editor_Keywords4',             'yellow:bg' },
    { 'Editor_Keywords5',             'blue:bg' },

    { 'Msg_Header',                   'darkCyan:bg' },
    { 'Msg_Quotes',                   'green:bg' },
    { 'Msg_Tag',                      'white:bg' },
    { 'Msg_Signature',                'darkCyan:bg' },

    { 'Comment',                      'darkCyan:bg' },
    { 'String',                       'white:bg' },

    { 'Lang_Default',                 'Editor_Default' },
    { 'Lang_Number',                  'white:bg' },
    { 'Lang_DecimalNumber',           'Lang_Number' },
    { 'Lang_HexNumber',               'magenta:bg' },
    { 'Lang_OctalNumber',             'magenta:bg' },
    { 'Lang_BinaryNumber',            'magenta:bg' },
    { 'Lang_Punctuation',             'white:bg' },
    { 'Lang_String',                  'String' },
    { 'Lang_Comment',                 'Comment' },
    { 'Lang_Preprocessor',            'green:bg' },
    { 'Lang_Function',                'cyan:bg' },
    { 'Lang_Label',                   'red:bg' },
    { 'Lang_Command',                 'cyan:bg' },
    { 'Lang_Regexp',                  'magenta:bg' },
    { 'Lang_Variable',                'white:bg' },
    { 'Lang_Control',                 'darkCyan:bg' },
    { 'Lang_Assembler',               'blue:bg' },

    { 'Markup_Default',               'gray:bg' },
    { 'Markup_Punctuation',           'darkCyan:bg' },
    { 'Markup_String',                'String' },
    { 'Markup_Symbol',                'green:bg' },
    { 'Markup_Tag',                   'cyan:bg' },
    { 'Markup_Comment',               'Comment' },
    { 'Markup_Special',               'red:bg' },
    { 'Markup_Control',               'magenta:bg' },
    { 'Markup_Quotes',                'yellow:bg' },
    { 'Markup_Math',                  'red:bg' },

    { 'DIFF_Default',                 'Editor_Default' },
    { 'DIFF_Old',                     'brown:bg' },
    { 'DIFF_New',                     'yellow:bg' },
    { 'DIFF_Changed',                 'darkCyan:bg' },

    { 'MERGE_Default',                'Editor_Default' },
    { 'MERGE_Changed',                'white:bg' },
    { 'MERGE_Old',                    'gray:bg' },
    { 'MERGE_New',                    'red:bg' },
    { 'MERGE_Control',                'yellow:bg' },
}

object ScrollBar {
    color {
        { 'Arrows',     'ScrollBar_Arrows' },
        { 'Back',       'ScrollBar_Background' },
        { 'Fore',       'ScrollBar_Slider' },
    };
}

object Status {
    color {
        { 'Normal',     'Status_Normal' },
        { 'Active',     'Status_Active' },
    };
}

object Message {
    color {
        { 'Normal',     'Message_Normal' },
        { 'Bold',       'Message_Bold' },
        { 'Error',      'Message_Error' },
    };
}

object Entry {
    color {
        { 'Field',      'EntryField_Field' },
        { 'Prompt',     'EntryField_Prompt' },
        { 'Selection',  'EntryField_Selection' },
    };
}

object LIST {
    color {
        { 'Status',     'List_Status' },
        { 'Normal',     'List_Normal' },
        { 'Selected',   'List_Selected' },
    };
}

object ASCII {
    color {
        { 'Chars',      'ASCII_Chars' },
    };
}

object Menu {
    color {
        { 'Background',  'Menu_Background' },
        { 'ActiveItem',  'Menu_ActiveItem' },
        { 'ActiveChar',  'Menu_ActiveChar' },
        { 'NormalItem',  'Menu_NormalItem' },
        { 'NormalChar',  'Menu_NormalChar' },
    };
}

object Choice {
    color {
        { "Title",       'Choice_Title' },
        { "Param",       'Choice_Param' },
        { "Background",  'Choice_Background' },
        { "ActiveItem",  'Choice_ActiveItem' },
        { "ActiveChar",  'Choice_ActiveChar' },
        { "NormalItem",  'Choice_NormalItem' },
        { "NormalChar",  'Choice_NormalChar' },
    };
}

object PLAIN {
    color {
        { 'Background', 'Editor_Default' },
        { 'Selected',   'Editor_Selected' },
        { 'Markers',    'Editor_Markers' },
        { 'Found',      'Editor_FoundText' },
        { 'Keyword',    'Editor_Keywords' },
        { 'Folds',      'Editor_Folds' },
        { 'HilitWord',  'Editor_HilitWord' },
    };
}

colorize PLAIN {
    SyntaxParser = 'PLAIN';

    color {
        { 'Normal',     'Editor_Default' },
    };
}

mode PLAIN {

    DetectLineSep       = 0;         # Don't autodetect line separator
    StripChar           = 13;        # Don't remove CR if at EOL when loading
    ExpandTabs          = 1;         # expand tabs on display
    TabSize             = 8;         # tab size 1-32
    AutoIndent          = 1;         # autoindent
    Insert              = 1;         # insert mode
    LineChar            = 10;        # line separator for loading
    AddCR               = 0;         # add CR when saving
    AddLF               = 1;         # add LF when saving
    LoadMargin          = -1;        # right margin for loading
    HilitOn             = 0;         # syntax hilit on
    ForceNewLine        = 0;         # force CR/LF on last saved line
    ShowTabs            = 0;         # show tabs as small circle on display
    Colorizer           = 'PLAIN';
    IndentMode          = 'PLAIN';   # indentation mode
    Undo                = 1;         # undo/redo enabled
    UndoLimit           = 1023;      # num of changes to save
    UndoMoves           = 0;         # undo cursor movement commands
    KeepBackups         = 1;         # save backup files
    MatchCase           = 0;         # find text case sensitively
    BackSpKillTab       = 1;         # backspace kills entire tabs
    DeleteKillTab       = 1;         # delete kills entire tabs
    BackSpUnindents     = 1;         # backspace at bol unindents
    SpaceTabs           = 1;         # insert tabs as spaces
    IndentWithTabs      = 0;         # use tabs for auto-indent
    WordWrap            = 0;         # word wrap (off = 0, line = 1, paragraph=2)
    LeftMargin          = 1;         # wrap left margin
    RightMargin         = 72;        # wrap right margin
    SeeThruSel          = 0;         # transparent selections
    ShowMarkers         = 1;         # visible eol/eof markers
    Trim                = 1;         # remove whitespace from eol when editing
    TrimOnSave          = 0;         # remove whitespace before saving
    DefFindOpt          = 'i';       # default find options
    DefFindReplaceOpt   = 'a';       # default find/replace options
    CursorThroughTabs   = 0;
    MultiLineHilit      = 0;
    WordChars           = 'A-Za-z0-9_';
    Abbreviations       = 1;
    PersistentBlocks    = 1;         # 1 = persistent blocks, 0 = transient
    BackSpKillBlock     = 0;         # to delete block if marked
    DeleteKillBlock     = 0;         #  ""
    InsertKillBlock     = 0;         # inserting char kills selected block
}

# C indentation style menu
menu MChangeCIndentStyle {
    item "&Default" {
        ChangeTabSize 4;
        SetIndentWithTabs 0
        SetCIndentStyle 4 0 -1 0 4 0 4 -4 0 1 -1 4 4
    }
    item "&Linux kernel" {
        ChangeTabSize 4;
        SetIndentWithTabs 1
        SetCIndentStyle 8 0 -1 0 8 0 8 -8 0 1 -1 8 8
    }
    item "&GNU" {
        ChangeTabSize 4;
        SetIndentWithTabs 1
        SetCIndentStyle 2 2 -1 0 2 0 2 -2 0 1 -1 2 2
    }
}

# FTE default menus
menu MOpenInMode {
    item "&Plain"      { FileOpenInMode 'PLAIN' }
    item "&Text"       { FileOpenInMode 'TEXT' }
    item "&C"          { FileOpenInMode 'C' }
    item "&HTML"       { FileOpenInMode 'HTML' }
    item "&SGML"       { FileOpenInMode 'SGML' }
    item "&XQL"        { FileOpenInMode 'XQL' }
    item "&REXX"       { FileOpenInMode 'REXX' }
    item "MAKE"        { FileOpenInMode 'MAKE' }
    item "&FTE"        { FileOpenInMode 'FTE' }
    item "Resource"    { FileOpenInMode 'RESOURCE' }
    item "SH"          { FileOpenInMode 'SH' }
    item "PER&L"       { FileOpenInMode 'PERL' }
    item "PASCAL"      { FileOpenInMode 'PASCAL' }
    item "&JAVA"       { FileOpenInMode 'JAVA' }
    item "TE&X"        { FileOpenInMode 'TEX' }
    item "&BIN"        { FileOpenInMode 'BIN' }
    item "4&GL"        { FileOpenInMode 'GL' }
    item "TCL"         { FileOpenInMode 'TCL' }
    item "PHP"         { FileOpenInMode 'PHP' }
    item "RUBY"        { FileOpenInMode 'RUBY' }
}

menu Object {
    item    "&Open...\tF3"              { FileOpen }
    submenu "Open in &Mode...\tCtrl+F3", MOpenInMode;
    item    "Open &Binary"              { FileOpenInMode 'BIN' }
    item;
    item    "Open &Directory\tC+M"      { DirOpen }
    item;
    item    "&Next\tAlt+Right"          { FileNext }
    item    "&Previous\tAlt+Left"       { FilePrev }
    item;
    item    "&Close\tAlt+Q"             { FileClose }
    item;
    item    "E&xit\tAlt+X"              { ExitEditor }
}

menu Tools {
    item "&Compile...\tF9"          { FileSaveAll; Compile "make "; ViewMessages }
    item "&Grep...\tF7"             { FileSaveAll; Compile "grep -n "; ViewMessages }
    item "Save and &ISpell"         { FileSave; RunProgram "ispell " . $FilePath; FileReload }
    item;
    item "&Shell\tAlt+F9"           { RunProgram "" }
    item "&Run...\tCtrl+F9"         { RunProgram }
    item;
    item "&Previous error\tF12"     { CompilePrevError }
    item "&Next error\tF11"         { CompileNextError }
    item;
    item "&Messages\tS+F9"          { ViewMessages }
    item "C&lear Messages"          { ClearMessages }
    item;
    item "S&VN update...\tCtrl+S+U" { FileSaveAll; RunCompiler "svn up"; ViewMessages }
    item "SVN c&ommit...\tCtrl+S+C" { FileSaveAll; Compile "svn ci -m \"\""; ViewMessages }
    item;
    item "CVS &update...\tAlt+S+U"  { FileSaveAll; RunCompiler "cvs up"; ViewMessages }
    item "CVS commi&t...\tAlt+S+C"  { FileSaveAll; Compile "cvs ci -m \"\""; ViewMessages }
}

menu Window {
    item "New &Frame"                 { FrameNew }
    item;
    item "Split &Horizontal\tCtrl+F4" { WinHSplit }
    item "&Close view\tCtrl+Alt+F4"   { WinClose }
    item "Close &other views\tF5"     { WinZoom }
    item;
    item "Sa&ve Desktop"              { DesktopSave }
    item "Save Desktop &As"           { DesktopSaveAs }
    item;
    item "&Routines\tAlt+F10"         { ListRoutines }
    item "&Buffers\tAlt+0"            { ViewBuffers }
    item "&Directory\tAlt+F3"         { DirOpen }
}

menu Help {
    item "&Keyboard\tF1"   { ViewModeMap }
    item "&Show key"       { ShowKey }
    item;
    item "&About..."       { ShowVersion }
}

menu Navigate {
    item    "&Reload\tCtrl+R"         { Rescan }
    item;
    item "Go &< level\tCtrl+PgUp"     { DirGoUp }
    item "Go &> level\tCtrl+PgDn"     { DirGoDown }
    item "Go to &\\\tCtrl+\\"         { DirGoRoot }
    item "&/ Goto Dir\t/"             { DirGoto }
}

menu MChangeMode {
    item "&Plain"      { ChangeMode 'PLAIN' }
    item "&Text"       { ChangeMode 'TEXT' }
    item "&C"          { ChangeMode 'C' }
    item "&XQL"        { ChangeMode 'XQL' }
    item "&HTML"       { ChangeMode 'HTML' }
    item "&SGML"       { ChangeMode 'SGML' }
    item "&IPF"        { ChangeMode 'IPF' }
    item "&REXX"       { ChangeMode 'REXX' }
    item "MAKE"        { ChangeMode 'MAKE' }
    item "&FTE"        { ChangeMode 'FTE' }
    item "Resource"    { ChangeMode 'RESOURCE' }
    item "SH"          { ChangeMode 'SH' }
    item "PER&L"       { ChangeMode 'PERL' }
    item "PASCAL"      { ChangeMode 'PASCAL' }
    item "&JAVA"       { ChangeMode 'JAVA' }
    item "TE&X"        { ChangeMode 'TEX' }
    item "&BIN"        { ChangeMode 'BIN' }
    item "4&GL"        { ChangeMode 'GL' }
    item "TCL"         { ChangeMode 'TCL' }
    item "PHP"         { ChangeMode 'PHP' }
    item "RUBY"        { ChangeMode 'RUBY' }
}

menu File {
    item    "&Open...\tF3"              { FileOpen }
    submenu "Open in &Mode...\tCtrl+F3", MOpenInMode;
    item    "Open &Binary..."           { FileOpenInMode 'BIN' }
    item    "Open &Directory\tC+M"      { DirOpen }
    item    "&Reload\tShift+F3"         { FileReload }
    item;
    item    "&Save\tF2"                 { FileSave }
    item    "Save &As...\tShift+F2"     { FileSaveAs }
    item    "Save Al&l\tCtrl+F2"        { FileSaveAll }
    item    "Write &To..."              { FileWriteTo }
    item;
    item    "Prin&t"                    { FilePrint }
    item;
    item    "&Next\tAlt+Right"          { FileNext }
    item    "&Previous\tAlt+Left"       { FilePrev }
    item;
    item    "&Close\tAlt+Q"             { FileClose }
    item;
    item    "E&xit\tAlt+X"              { ExitEditor }
}

menu Line {
    item "&Insert line\tShift+Enter"             { LineInsert }
    item "&Add line\tAlt+Enter"                  { LineAdd }
    item "&Split line\tCtrl+Enter"               { LineSplit }
    item "&Join line\tCtrl+J"                    { LineJoin }
    item "Dup&licate line\tCtrl+D"               { LineDuplicate }
    item "&Delete line\tCtrl+Y"                  { KillLine }
    item "&Center line"                          { LineCenter }
    item;
    item "Delete to line &end\tAlt+End"          { KillToLineEnd }
    item "Delete to li&ne start\tCtrl+Sh+BackSp" { KillToLineStart }
    item;
    item "&Uppercase"                            { LineCaseUp }
    item "&Lowercase"                            { LineCaseDown }
    item "&Togglecase"                           { LineCaseToggle }
    item "&Rot13"                                { LineTrans 'A-Za-z' 'N-ZA-Mn-za-m' }
    item;
    item "User &specified..."                    { LineTrans }
}

menu Edit {
    item "&Undo\tAlt+BackSp"        { Undo }
    item "&Redo\tAlt+Shift+BackSp"  { Redo }
    item;
    item "Cu&t\tShift+Del"          { BlockCut }
    item "&Copy\tCtrl+Ins"          { BlockCopy }
    item "Cut&-Append"              { BlockCutAppend }
    item "Copy-Appe&nd"             { BlockCopyAppend }
    item "&Paste Stream\tShift+Ins" { BlockPasteStream }
    item "Paste Colu&mn\tAlt+Ins"   { BlockPasteColumn }
    item "Paste Li&ne"              { BlockPasteLine }
    item "Cl&ear\tCtrl+Del"         { BlockKill }
    item;
    submenu "&Line", Line;
    item;
    item "&Quote Literal...\tCtrl+Q"  { InsertChar }
    item "&ASCII Table...\tCtrl+Sh+A" { ASCIITable }
}

menu Translate {
    item "&Uppercase\tAlt+U"    { BlockCaseUp }
    item "&Lowercase\tAlt+L"    { BlockCaseDown }
    item "&Togglecase"          { BlockCaseToggle }
    item "&Rot13"               { BlockTrans 'A-Za-z' 'N-ZA-Mn-za-m' }
    item;
    item "User &specified..."   { BlockTrans }
}

menu Block {
    item "&Unmark\tEsc"          { BlockUnmark }
    item "Mark &Stream\tAlt+A"   { BlockMarkStream }
    item "Mark &Column\tAlt+K"   { BlockMarkColumn }
    item "Mark &Line\tCtrl+B"    { BlockMarkLine }
    item;
    item "&Write..."             { BlockWrite }
    item "&Read Stream..."       { BlockReadStream }
    item "Re&ad Column..."       { BlockReadColumn }
    item "Rea&d Line..."         { BlockReadLine }
    item "&Print"                { BlockPrint }
    item;
    submenu "Translat&e", Translate;
    item "&Indent\tAlt+I"        { BlockIndent }
    item "U&nindent\tAlt+U"      { BlockUnindent }
    item "E&xpand Tabs"          { BlockUnTab }
    item "&Generate Tabs"        { BlockEnTab }
    item "Sor&t"                 { BlockSort }
    item "Sort Re&verse"         { BlockSortReverse }
}

menu Tags {
    item "&Find word\tCtrl+]"          { TagFindWord }
    item "&Search tag...\tCtrl+Sh+]"   { TagFind }
    item "&Go back\tCtrl+["            { TagPop }
    item "&Next tag\tAlt+]"            { TagNext }
    item "&Previous tag\tAlt+["        { TagPrev }
    item;
    item "&Load tags..."               { TagLoad }
    item "&Clear tags"                 { TagClear }
}

menu SearchWords {
    item "Search &Prev\tAlt+,"         { SearchWordPrev }
    item "Search &Next\tAlt+."         { SearchWordNext }
    item "&Highlight\tAlt+/"           { HilitWord }
}

menu Search {
    item "&Find...\tCtrl+W"             { Find }
    item "Find &Next\tCtrl+G"           { FindRepeat }
    item "Find &Prev\tCtrl+H"           { FindRepeatReverse }
    item "Find and &Replace...\tCtrl+N" { FindReplace }
    item;
    item "P&lace Bookmark..."           { PlaceBookmark }
    item "Goto &Bookmark..."            { GotoBookmark }
    item;
    submenu "&Tags", Tags;
    item "&Match Paren\tAlt+-"          { MatchBracket }
    item "&Goto Line...\tCtrlt+L"       { MoveToLine }
    item "Goto &Column..."              { MoveToColumn }
    submenu "&Words", SearchWords;
}

menu Fold {
    item "&Open fold\tCtrl+Gr+"              { FoldOpen }
    item "Open &nested folds\tCtrl+Gr*"      { FoldOpenNested }
    item "Open &all folds\tAlt+Gr*"          { FoldOpenAll }
    item;
    item "C&lose fold\tCtrl+Gr-"             { FoldClose }
    #item "Close &nested folds\tCtrl+Gray+/" { FoldCloseNested }
    item "Close all &folds\tAlt+Gr/"         { FoldCloseAll }
    item;
    item "&Create fold\tAlt+Gr+"             { FoldCreate }
    item "Create folds by &regexp..."        { FoldCreateByRegexp }
    item "Create folds at routine&s"         { FoldCreateAtRoutines }
    item;
    item "&Destroy fold\tAlt+Gr-"            { FoldDestroy }
    item "Destro&y all folds"                { FoldDestroyAll }
    item;
    item "&Promote\tSh+Gr-"                  { FoldPromote }
    item "De&mote\tSh+Gr+"                   { FoldDemote }
    item;
    item "&Toggle\tCtrl+Gr/"                 { FoldToggleOpenClose }
}

menu Options {
    submenu "Change &mode\tC+O C+M", MChangeMode;
    submenu "Change C in&dent style", MChangeCIndentStyle;
    item;
    item "&Insert mode\tC+O C+I"       { ToggleInsert }
    item "&Auto indent\tC+O C+A"       { ToggleAutoIndent }
    item "&Case sensitive\tC+O C+C"    { ToggleMatchCase }
    item "Trim &EOL spaces\tC+O C+E"   { ToggleTrim }
    item "&Read only\tC+O C+R"         { ToggleReadOnly }
    item "&Undo/Redo\tC+O C+U"         { ToggleUndo }
    item "&Show markers\tC+O C+."      { ToggleShowMarkers; WinRefresh }
    item;
    item "&Word wrap\tC+O C+W"         { ToggleWordWrap }
    item "&Left margin...\tC+O A+["    { ChangeLeftMargin }
    item "Ri&ght margin...\tC+O A+]"   { ChangeRightMargin }
    item;
    item "&Tab size...\tC+O C+T"       { ChangeTabSize; WinRefresh }
    item "S&how tabs\tC+O   Tab"       { ToggleShowTabs; WinRefresh }
    item "E&xpand tabs\tC+O C+Tab"     { ToggleExpandTabs; WinRefresh }
    item "&Print to...               " { SetPrintDevice }
    item;
    item "Rec&ompile Configuration"    { ConfigRecompile }
}

menu Main {
    submenu "&File",    File;
    submenu "&Edit",    Edit;
    submenu "&Block",   Block;
    submenu "&Search",  Search;
    submenu "&Tools",   Tools;
    submenu "&Window",  Window;
    submenu "&Options", Options;
    submenu "&Help",    Help;
}

menu Local {
    item "&Buffers\tAlt+0"        { ViewBuffers }
    item "&Routines\tAlt+F10"     { ListRoutines }
    item;
    item "Cu&t\tShift+Del"        { BlockCut }
    item "&Copy\tCtrl+Ins"        { BlockCopy }
    item "&Paste\tShift+Ins"      { BlockPasteStream }
    item;
    item "Mark &Stream\tAlt+A"    { BlockMarkStream }
    item "Mark &Line\tCtrl+B"     { BlockMarkLine }
    item "Selec&t Line"       { BlockSelectLine }
    item "&Write..."              { BlockWrite }
    item;
    item "&Compile...\tF9"        { FileSaveAll; Compile "make"; ViewMessages }
    item "&Reload"                { FileReload }
    item;
    item "&Save\tF2"              { FileSave }
    item "Cl&ose\tAlt+Q"          { FileClose }
}

menu DirectoryFile {
    item    "&Selected\tEnter"           { Activate }
    item;
    item    "&Open...\tF3"               { FileOpen }
    submenu "Open in &Mode...\tCtrl+F3", MOpenInMode;
    item    "Open &Binary"               { FileOpenInMode 'BIN' }
    item;
    item    "&Next\tAlt+Right"           { FileNext }
    item    "&Previous\tAlt+Left"        { FilePrev }
    item;
    item    "&Close\tAlt+Q"              { FileClose }
    item;
    item    "E&xit\tAlt+X"               { ExitEditor }
}

menu DirectoryMain {
    submenu "&File",     DirectoryFile;
    submenu "&Navigate", Navigate;
    submenu "&Tools",    Tools;
    submenu "&Window",   Window;
    submenu "&Help",     Help;
}

menu MessagesMain {
    submenu "&File",    Object;
    submenu "&Tools",   Tools;
    submenu "&Window",  Window;
    submenu "&Help",    Help;
}

menu RoutinesMain {
    submenu "&File",    Object;
    submenu "&Tools",   Tools;
    submenu "&Window",  Window;
    submenu "&Help",    Help;
}

menu BufferListMain {
    submenu "&File",    Object;
    submenu "&Tools",   Tools;
    submenu "&Window",  Window;
    submenu "&Help",    Help;
}

menu EventMapViewMain {
    submenu "&File",   Object;
    submenu "&Tools",  Tools;
    submenu "&Window", Window;
    submenu "&Help",   Help;
}

menu DirectoryLocal {
    item "&Buffers\tAlt+0"            { ViewBuffers }
    item;
    item "&Open"                      { Activate }
    item;
    item "&Reload\tCtrl+R"            { Rescan }
    item;
    item "Go &< level\tCtrl+PgUp"     { DirGoUp }
    item "Go &> level\tCtrl+PgDn"     { DirGoDown }
    item "Go to &\\\tCtrl+\\"         { DirGoRoot }
    item "&/ Goto Dir\t/"             { DirGoto }
    item;
    item "&Close"                     { FileClose }
}

menu BufferListLocal {
    item "&View\tEnter"     { Activate }
    item;
    item "&Save\tCtrl+S"    { BufListFileSave }
    item "&Close\tCtrl+C"   { BufListFileClose }
}

menu RoutinesLocal {
    item "&Buffers\tAlt+0" { ViewBuffers }
    item;
    item "&View\tEnter"    { Activate }
    item;
    item "&Close"          { FileClose }
}

menu EventMapViewLocal {
    item "&Close view\tAlt+Q" { FileClose }
}

menu MessagesLocal {
    item "&Buffers\tAlt+0"         { ViewBuffers }
    item "&Next Buffer\tAlt+Right" { FileNext }
    item;
    item "&View error\tEnter"      { Activate }
    item;
    item "&Previous error\tF11"    { CompilePrevError }
    item "&Next error\tF12"        { CompileNextError }
    item;
    item "&Close"                  { FileClose }
}

eventmap MODEL {
    key       [F1]      { ViewModeMap }
    key     [C+F2]      { FileSaveAll }
    key       [F3]      { FileOpen }
    key       [F4]      { WinNext }
    key     [C+F4]      { WinHSplit }
    key     [S+F4]      { WinPrev }
    key   [A+S+F4]      { WinClose }
    key       [F5]      { WinZoom }
    key       [F6]      { FileNext }
    key     [S+F6]      { FilePrev }
    key   [A+S-F6]      { FileLast }
    key       [F10]     { MainMenu }
    key     [C+F10]     { FileClose }
    key     [C+F9]      { FileSaveAll; RunProgram }
    key     [A+F9]      { FileSaveAll; RunProgram "" }
    key     [S+F10]     { LocalMenu }

    key   [A+G-Up]      { WinPrev }
    key   [A+G-Down]    { WinNext }
    key   [A+G-Left]    { FilePrev }
    key   [A+G-Right]   { FileNext }
    key   [A+C+G-Left]  { FramePrev }
    key   [A+C+G-Right] { FrameNext }

    key   [A+G-PgUp]    { WinPrev; MovePageUp; WinNext }
    key   [A+G-PgDn]    { WinNext; MovePageDown; WinPrev }
    key [A+C+G-PgUp]    { WinNext; MovePageUp; WinPrev }
    key [A+C+G-PgDn]    { WinPrev; MovePageDown; WinNext }

    key     [A+X]       { ExitEditor }
    key     [A+Q]       { FileClose }

    key   [C+S+G-Up]    { WinResize -1 }
    key   [C+S+G-Down]  { WinResize +1 }

    key   [F7]          { FileSaveAll; Compile "grep -n "; ViewMessages }
    key   [C+S+C]       { FileSaveAll; Compile "svn commit -m \"\""; ViewMessages }
    key   [C+S+U]       { FileSaveAll; RunCompiler "svn update"; ViewMessages }
    key   [A+S+C]       { FileSaveAll; Compile "cvs commit -m \"\""; ViewMessages }
    key   [A+S+U]       { FileSaveAll; RunCompiler "cvs update"; ViewMessages }
    key   [F9]          { FileSaveAll; Compile; ViewMessages }
    key   [F11]         { CompilePrevError }
    key   [F12]         { CompileNextError }
    key   [S+F9]        { ViewMessages }

    key     [A+F5]      { ShowEntryScreen }

    key     [A+0]       { ViewBuffers }
    key     [A+1]       { SwitchTo 1 }
    key     [A+2]       { SwitchTo 2 }
    key     [A+3]       { SwitchTo 3 }
    key     [A+4]       { SwitchTo 4 }
    key     [A+5]       { SwitchTo 5 }
    key     [A+6]       { SwitchTo 6 }
    key     [A+7]       { SwitchTo 7 }
    key     [A+8]       { SwitchTo 8 }
    key     [A+9]       { SwitchTo 9 }

    key     [A+F]       { MainMenu 'F' }
    key     [A+T]       { MainMenu 'T' }
    key     [A+W]       { MainMenu 'W' }
    key     [A+H]       { MainMenu 'H' }
}

eventmap MLIST: MODEL {
    key     [G-Left]    { MoveLeft }
    key     [G-Right]   { MoveRight }
    key     [G-Up]      { MoveUp }
    key     [G-Down]    { MoveDown }
    key     [G-Home]    { MoveFileStart }
    key   [C+G-Home]    { MovePageStart }
    key     [G-End]     { MoveFileEnd }
    key   [C+G-End]     { MovePageEnd }
    key     [G-PgUp]    { MovePageUp }
    key   [C+G-PgUp]    { MoveFileStart }
    key     [G-PgDn]    { MovePageDown }
    key   [C+G-PgDn]    { MoveFileEnd }
    key   [C+G-Left]    { ScrollRight }
    key   [C+G-Right]   { ScrollLeft }

    key     [G-Enter]   { Activate }
    key     [Space]     { ActivateInOtherWindow }
    key     [S+G-Enter] { CloseActivate }

    key     [C+R]       { Rescan }
}

eventmap DIRECTORY: MLIST {
    MainMenu = 'DirectoryMain';
    LocalMenu = 'DirectoryLocal';

    key [C+G-PgUp]      { DirGoUp }
    key [C+G-PgDn]      { DirGoDown }
    key [C+\\]          { DirGoRoot }
    key [/]             { DirGoto }
    key [\\]            { DirGoto }
    key [Esc]           { FileClose 0 }

    key     [A+N]       { MainMenu 'N' }
}

eventmap BUFFERS: MLIST {
    MainMenu = "BufferListMain";
    LocalMenu = "BufferListLocal";

    key  [Esc]   { FileClose 0 } # 0 = do not open directory when last closed, overrides OpenAfterClose default.

    key  [C+C]   { BufListFileClose }
    key  [G-Del] { BufListFileClose }
    key  [C+S]   { BufListFileSave }
    key  [F2]    { BufListFileSave }
}

eventmap ROUTINES: MLIST {
    MainMenu = "RoutinesMain";
    LocalMenu = "RoutinesLocal";

    key  [Esc]   { FileClose }
}

eventmap MESSAGES: MLIST {
    MainMenu = "MessagesMain";
    LocalMenu = "MessagesLocal";

    key     [C+C]       { ChildClose } # does NOT kill, just closes pipe
}

eventmap EVENTMAPVIEW: MLIST {
    MainMenu = "EventMapViewMain";
    LocalMenu = "EventMapViewLocal";

    key [Esc] { FileClose 0 }
}

eventmap PLAIN: MODEL {

    MainMenu   = 'Main';    # menu for menubar
    LocalMenu  = 'Local';   # local menu

    key       [Esc]     { BlockMarkStream; BlockUnmark }
    key       [F2]      { FileSave }
    key     [S+F2]      { FileSaveAs }
    key   [A+S+F2]      { FileSave; FileClose }
    key     [S+F3]      { FileReload; WinRefresh }
    key     [C+F3]      { FileOpenInMode }
    key     [S+F7]      { MoveBlockStart }
    key     [C+F8]      { BlockEnd }
    key     [S+F8]      { MoveBlockEnd }
    key     [G-Left]    { MoveLeft }
    key   [C+G-Left]    { MoveWordPrev }
    key     [G-Right]   { MoveRight }
    key   [C+G-Right]   { MoveWordNext }
    key     [G-Up]      { MoveUp }
    key     [G-Down]    { MoveDown }
    key     [G-Home]    { MoveLineStart }
    key   [C+G-Home]    { MovePageStart }
    key     [G-End]     { MoveLineEnd }
    key   [C+G-End]     { MovePageEnd }
    key     [G-PgUp]    { MovePageUp }
    key   [C+G-PgUp]    { MoveFileStart }
    key     [G-PgDn]    { MovePageDown }
    key   [C+G-PgDn]    { MoveFileEnd }

    key   [S+G-Left]    { BlockExtendBegin; MoveLeft;      BlockExtendEnd }
    key   [S+G-Right]   { BlockExtendBegin; MoveRight;     BlockExtendEnd }
    key [C+G-S+Left]    { BlockExtendBegin; MoveWordPrev;  BlockExtendEnd }
    key [C+G-S+Right]   { BlockExtendBegin; MoveWordNext;  BlockExtendEnd }
    key   [G-S+Up]      { BlockExtendBegin; MoveUp;        BlockExtendEnd }
    key   [G-S+Down]    { BlockExtendBegin; MoveDown;      BlockExtendEnd }
    key   [G-S+Home]    { BlockExtendBegin; MoveLineStart; BlockExtendEnd }
    key   [G-S+End]     { BlockExtendBegin; MoveLineEnd;   BlockExtendEnd }
    key [C+G-S+Home]    { BlockExtendBegin; MovePageStart; BlockExtendEnd }
    key [C+G-S+End]     { BlockExtendBegin; MovePageEnd;   BlockExtendEnd }
    key   [G-S+PgUp]    { BlockExtendBegin; MovePageUp;    BlockExtendEnd }
    key   [G-S+PgDn]    { BlockExtendBegin; MovePageDown;  BlockExtendEnd }
    key [C+G-S+PgUp]    { BlockExtendBegin; MoveFileStart; BlockExtendEnd }
    key [C+G-S+PgDn]    { BlockExtendBegin; MoveFileEnd;   BlockExtendEnd }
    key [A+G-C+Up]      { MovePrevEqualIndent }
    key [A+G-C+Down]    { MoveNextEqualIndent }
    key   [C+G-Ins]     { BlockCopy }
    key   [C+G-Del]     { BlockKill }
    key   [S+G-Ins]     { BlockPasteStream }
    key   [S+G-Del]     { BlockCut }
    key   [A+G-Ins]     { BlockPasteColumn }
    key [A+G-S+Ins]     { BlockPasteLine }
    key     [G-Enter]   { LineNew }
    key     [S-BackSp]  { BackSpace }
    key     [G-Ins]     { ToggleInsert }
    key     [G-Del]     { Delete }
    key       [Tab]     { InsertTab }
    key     [S+Tab]     { InsertSpacesToTab 10 }
    key     [C+Tab]     { CompleteWord }
    key     [C+BackSp]  { KillWordPrev }
    key   [C+S+BackSp]  { KillToLineStart }
    key   [C+G-Enter]   { LineSplit }
    key   [G-S+Enter]   { LineInsert }
    key   [A+G-Enter]   { LineAdd }
    key   [A+G-Del]     { KillWord }
    key   [A+G-End]     { KillToLineEnd }
    key   [A+BackSp]    { Undo }
    key   [A+S+BackSp]  { Redo }

    key     [C+C]       { BlockCopy }
    key     [C+V]       { BlockPaste }
    key     [C+X]       { BlockCut }
    key     [C+Z]       { Undo }
    key     [C+S+Z]     { Redo }

    key     [C+A_1]     { GotoBookmark "1" }
    key     [C+A_2]     { GotoBookmark "2" }
    key     [C+A_3]     { GotoBookmark "3" }
    key     [C+A_4]     { GotoBookmark "4" }
    key     [C+A_5]     { GotoBookmark "5" }
    key     [C+A_6]     { GotoBookmark "6" }
    key     [C+A_7]     { GotoBookmark "7" }
    key     [C+A_8]     { GotoBookmark "8" }
    key     [C+A_9]     { GotoBookmark "9" }
    key     [C+A_0]     { GotoBookmark "0" }

    key     [C+P_1]     { PlaceBookmark "1" }
    key     [C+P_2]     { PlaceBookmark "2" }
    key     [C+P_3]     { PlaceBookmark "3" }
    key     [C+P_4]     { PlaceBookmark "4" }
    key     [C+P_5]     { PlaceBookmark "5" }
    key     [C+P_6]     { PlaceBookmark "6" }
    key     [C+P_7]     { PlaceBookmark "7" }
    key     [C+P_8]     { PlaceBookmark "8" }
    key     [C+P_9]     { PlaceBookmark "9" }
    key     [C+P_0]     { PlaceBookmark "0" }

    key     [C+D]       { LineDuplicate }
    key     [C+W]       { Find }
    key     [C+G]       { FindRepeat }
    key     [A+F10]     { ListRoutines }
    key     [C+J]       { LineJoin }
    key     [C+H]       { FindRepeatReverse }
    key     [A+F3]      { DirOpen }
    key     [C+Q]       { InsertChar }
    key     [C+N]       { FindReplace }
    key     [C+T]       { KillWord }
    key     [C+Y]       { KillLine }
    key     [C+E]       { MoveLineEnd }
    key     [C+A]       { MoveLineStart }
    key     [A+A]       { BlockMarkStream }
    key     [A+B]       { MainMenu 'B' }
    key     [A+C]       { BlockCopy }
    key     [A+D]       { MainMenu 'D' }
    key     [A+E]       { MainMenu 'E' }
    key     [A+G]       { BlockCut }
    key     [A+I]       { BlockIndent }
    key     [C+L]       { MoveToLine }
    key     [A+K]       { BlockMarkColumn }
    key     [C+B]       { BlockMarkLine }
    key     [A+O]       { MainMenu 'O' }
    key     [A+R]       { WrapPara }           # Reformat
    key     [A+S]       { MainMenu 'S' }
    key     [A+U]       { BlockCaseUp }
    key     [A+L]       { BlockCaseDown }
    key     [C+S]       { IncrementalSearch }

    key     [C+O_C+A]   { ToggleAutoIndent }
    key     [C+O_C+C]   { ToggleMatchCase }
    key     [C+O_C+E]   { ToggleTrim }
    key     [C+O_C+I]   { ToggleInsert }
    key     [C+O_C+M]   { ShowMenu 'MChangeMode' }
    key     [C+O_S-M]   { ChangeMode }
    key     [C+O_C+R]   { ToggleReadOnly }
    key     [C+O_C+S]   { ToggleSysClipboard }
    key     [C+O_C+T]   { ChangeTabSize }
    key     [C+O_C+U]   { ToggleUndo }
    key     [C+O_C+W]   { ToggleWordWrap }
    key     [C+O_.]     { ToggleShowMarkers }
    key     [C+O_[]     { SetLeftMargin }     # set margin to current cursor pos
    key     [C+O_\]]    { SetRightMargin }
    key     [C+O_A+[]   { ChangeLeftMargin }
    key     [C+O_A+\]]  { ChangeRightMargin }
    key     [C+O_Tab]   { ToggleShowTabs ; WinRefresh }
    key     [C+O_C+Tab] { ToggleExpandTabs ; WinRefresh }
    key     [C+O_G-Del] { ToggleDeleteKillTab }
    key     [C+O_G-Ins] { ToggleInsert }
    key    [C+O_BackSp] { ToggleBackSpKillTab }
    key     [C+O_Space] { ToggleIndentWithTabs }
    key  [C+O_C+BackSp] { ToggleBackSpUnindents }
    key     [A+-]       { MatchBracket }
    key     [A+=]       { HilitMatchBracket }
    key     [C+Space]   { InsPrevLineChar }
    key     [A+Space]   { InsPrevLineToEol }
    key     [C+_]       { ShowPosition }
    key     [C+-]       { ShowPosition }
    key       [Center]  { MoveLineCenter }
    key   [C+S+A]       { ASCIITable }

    key     [A+G++]     { FoldCreate }
    key     [A+G+-]     { FoldDestroy }
    key     [G+S++]     { FoldPromote }
    key     [G+S+-]     { FoldDemote }
    key     [C+G++]     { FoldOpen }
    key     [C+G+-]     { FoldClose }
    key     [C+G+*]     { FoldOpenNested }
    key     [C+G+/]     { FoldToggleOpenClose }
    key     [A+G+*]     { FoldOpenAll }
    key     [A+G+/]     { FoldCloseAll }

    key     [A+,]       { SearchWordPrev }
    key     [A+.]       { SearchWordNext }
    key     [A+/]       { HilitWord }

    key     [C+\]]      { TagFindWord }
    key     [C+S+\]]    { TagFind }
    key     [C+[]       { TagPop }
    key     [A+\]]      { TagNext }
    key     [A+[]       { TagPrev }
    key     [S+Tab]     { InsertTab; LineTrim }
}

eventmap PLAIN {
    key [A+S+-] { # select block between {}()[]<>
        BlockUnmark; BlockMarkStream; MatchBracket; BlockMarkStream;
        SavePos; MoveBlockEnd;
        2:MoveNext; ?MoveLeft;  # do this to mark a newline after })>]
        BlockEnd; MoveSavedPos;
    }

    key [A+C+F]   { IndentFunction }
    key [A+C+M]   { BlockMarkFunction }
    key [A+C+[]   { MoveFunctionPrev }
    key [A+C+\]]  { MoveFunctionNext }

    key [C+F1]    { ShowHelpWord "" }
    key [F1]      { ShowHelp "FTE" "" }
}

eventmap FTE {
    key       [Tab]     { LineIndent; LineTrim }
    key       [G-Enter] { LineIndent; LineNew }
    key       [{]       { SelfInsert; LineIndent }
    key       [}]       { SelfInsert; LineIndent }
}

include 'm_tcl.fte';
include 'm_html.fte';
include 'm_man.fte';
include 'm_text.fte';
include 'm_asm.fte';
include 'm_c.fte';
include 'm_xql.fte';
include 'm_make.fte';
include 'm_sh.fte';
include 'm_pascal.fte';
include 'm_perl.fte';
include 'm_rexx.fte';
include 'm_java.fte';
include 'm_tex.fte';
include 'm_texi.fte';
include 'm_sl.fte';
include 'm_js.fte';
include 'm_sql.fte';
include 'm_bin.fte';
include 'm_sgml.fte';
include 'm_ocaml.fte';
include 'm_css.fte';
include 'm_ruby.fte';
include 'm_php.fte';

